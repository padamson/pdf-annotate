{
    "comments": {
        "patterns": [
            {
                "begin": "/\\*\\*(?!/)",
                "captures": {
                    "0": {
                        "name": "punctuation.definition.comment.paj"
                    }
                },
                "end": "\\*/",
                "name": "comment.block.documentation.paj"
            },
            {
                "begin": "/\\*",
                "captures": {
                    "0": {
                        "name": "punctuation.definition.comment.paj"
                    }
                },
                "end": "\\*/",
                "name": "comment.block.paj"
            },
            {
                "captures": {
                    "1": {
                        "name": "punctuation.definition.comment.paj"
                    }
                },
                "match": "(//).*$\\n?",
                "name": "comment.line.double-slash.js"
            }
        ]
    },
    "constant": {
        "match": "\\b(?:true|false|null)\\b",
        "name": "constant.language.paj"
    },
    "number": {
        "match": "(?x)        # turn on extended mode\n  -?        # an optional minus\n  (?:\n    0       # a zero\n    |       # ...or...\n    [1-9]   # a 1-9 character\n    \\d*     # followed by zero or more digits\n  )\n  (?:\n    (?:\n      \\.    # a period\n      \\d+   # followed by one or more digits\n    )?\n    (?:\n      [eE]  # an e character\n      [+-]? # followed by an option +/-\n      \\d+   # followed by one or more digits\n    )?      # make exponent optional\n  )?        # make decimal portion optional",
        "name": "constant.numeric.paj"
    },
    "object": {
        "begin": "\\{",
        "beginCaptures": {
            "0": {
                "name": "punctuation.definition.dictionary.begin.paj"
            }
        },
        "end": "\\}",
        "endCaptures": {
            "0": {
                "name": "punctuation.definition.dictionary.end.paj"
            }
        },
        "name": "meta.structure.dictionary.paj",
        "patterns": [
            {
                "comment": "the PAJ object key",
                "include": "#objectkey"
            },
            {
                "include": "#comments"
            },
            {
                "begin": ":",
                "beginCaptures": {
                    "0": {
                        "name": "punctuation.separator.dictionary.key-value.paj"
                    }
                },
                "end": "(,)|(?=\\})",
                "endCaptures": {
                    "1": {
                        "name": "punctuation.separator.dictionary.pair.paj"
                    }
                },
                "name": "meta.structure.dictionary.value.paj",
                "patterns": [
                    {
                        "comment": "the PAJ object value",
                        "include": "#value"
                    },
                    {
                        "match": "[^\\s,]",
                        "name": "invalid.illegal.expected-dictionary-separator.paj"
                    }
                ]
            },
            {
                "match": "[^\\s\\}]",
                "name": "invalid.illegal.expected-dictionary-separator.paj"
            }
        ]
    },
    "string": {
        "begin": "\"",
        "beginCaptures": {
            "0": {
                "name": "punctuation.definition.string.begin.paj"
            }
        },
        "end": "\"",
        "endCaptures": {
            "0": {
                "name": "punctuation.definition.string.end.paj"
            }
        },
        "name": "string.quoted.double.paj",
        "patterns": [
            {
                "include": "#stringcontent"
            }
        ]
    },
    "objectkey": {
        "begin": "\"",
        "beginCaptures": {
            "0": {
                "name": "punctuation.support.type.property-name.begin.paj"
            }
        },
        "end": "\"",
        "endCaptures": {
            "0": {
                "name": "punctuation.support.type.property-name.end.paj"
            }
        },
        "name": "string.paj support.type.property-name.paj",
        "patterns": [
            {
                "include": "#stringcontent"
            }
        ]
    },
    "stringcontent": {
        "patterns": [
            {
                "match": "(?x)                # turn on extended mode\n  \\\\                # a literal backslash\n  (?:               # ...followed by...\n    [\"\\\\/bfnrt]     # one of these characters\n    |               # ...or...\n    u               # a u\n    [0-9a-fA-F]{4}) # and four hex digits",
                "name": "constant.character.escape.paj"
            },
            {
                "match": "\\\\.",
                "name": "invalid.illegal.unrecognized-string-escape.paj"
            }
        ]
    },
    "value": {
        "patterns": [
            {
                "include": "#constant"
            },
            {
                "include": "#number"
            },
            {
                "include": "#string"
            },
            {
                "include": "#array"
            },
            {
                "include": "#object"
            },
            {
                "include": "#comments"
            }
        ]
    }
}